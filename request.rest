@baseURL = http://localhost:8001
#@baseURL = https://parked-car-owner-dev-api.onrender.com

###
GET {{baseURL}}


###
POST {{baseURL}}/register
Content-Type: application/json

{
    "name": "user3",
    "email": "user3@test.com",
    "phone": "1234567890",
    "password": "1234"
}

###
# @name login
POST {{baseURL}}/auth/login
Content-Type: application/json

{
    "email": "user1@test.com",
    "password": "123456"
}

###

@access_token = {{login.response.body.token}}
@refresh_token = {{login.response.body.refreshToken}} 

###
POST {{baseURL}}/auth/refresh
Content-Type: application/json

{
    "refreshToken": "{{refresh_token}}"
}

###
POST {{baseURL}}/auth/logout
Content-Type: application/json

{
    "refreshToken": "{{refresh_token}}"
}

###
GET {{baseURL}}/protected 
Authorization: Bearer {{access_token}}



// const SPACE = sequelize.define("space", {
//     space_id: { type: Sequelize.INTEGER },
//     width: { type: Sequelize.DOUBLE, allowNull: false },
//     length: { type: Sequelize.DOUBLE, allowNull: false },
//     height: { type: Sequelize.DOUBLE, allowNull: false },
//     base_fare: { type: Sequelize.DOUBLE, allowNull: false },
//     user_id: { type: Sequelize.INTEGER, allowNull: false },
//     security_measures: { type: Sequelize.STRING, allowNull: false },
//     status: { type: Sequelize.STRING, allowNull: false },
//     rating: { type: Sequelize.DOUBLE, allowNull: true },
//     total_books: { type: Sequelize.INTEGER, allowNull: false },
//     auto_approve: { type: Sequelize.BOOLEAN, allowNull: false },
//     address: { type: Sequelize.STRING, allowNull: false },
//     city: { type: Sequelize.STRING, allowNull: false },
//     latitude: { type: Sequelize.DOUBLE, allowNull: false },
//     longitude: { type: Sequelize.DOUBLE, allowNull: false },
//     created_at: { type: Sequelize.DATE, allowNull: false },
//     updated_at: { type: Sequelize.DATE, allowNull: false },
//     availability_mask: { type: Sequelize.STRING, allowNull: false },
//     time_slots: { type: Sequelize.ARRAY(Sequelize.BOOLEAN), allowNull: false }
//     });



###
POST {{baseURL}}/space/add
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
    "width": 10,
    "length": 10,
    "height": 10,
    "base_fare": 100,
    "security_measures": "securityMeasures",
    "status": "status",
    "auto_approve": true,
    "address": "address",
    "city": "city",
    "latitude": 10,
    "longitude": 10
}

###
GET {{baseURL}}/space/getMySpaces
Authorization: Bearer {{access_token}}
###
POST {{baseURL}}/space/changeSpaceStatus
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
    "spaceId": 2,
    "status": "disabled"
}

###
GET {{baseURL}}/space/getDisabledSpaces
Authorization: Bearer {{access_token}}
